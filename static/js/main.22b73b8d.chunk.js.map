{"version":3,"sources":["components/Navbar.tsx","pages/AboutPage.tsx","components/TodoList.tsx","components/TodoForm.tsx","pages/TodosPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","to","AboutPage","history","useHistory","onClick","push","TodoList","todos","onToggle","onRemove","length","map","todo","title","id","completed","type","checked","onChange","bind","event","preventDefault","removeHandler","TodoForm","props","useState","setTitle","target","value","placeholder","onKeyPress","key","onAdd","htmlFor","TodosPage","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","confirm","filter","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22b73b8d.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom'\n\n\nexport const Navbar: React.FC = () => (\n  <nav>\n    <div className=\"nav-wrapper indigo accent-4 px1\">\n      <a href=\"/\" className=\"brand-logo\">React + TS</a>\n      <ul className=\"right hide-on-med-and-down\">\n        <li>\n          <NavLink to=\"/\">To Do List</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/about\">About Us</NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n)\n","import React from 'react';\nimport { useHistory } from 'react-router-dom'\n\n\nexport const AboutPage: React.FC = () => {\n  const history =  useHistory()\n  return (\n    <>\n      <h1>About Page</h1>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Vel libero adipisci quia rem officia neque impedit sunt aspernatur excepturi deleniti! Earum veniam recusandae quasi provident est molestiae, ipsam magni placeat.\n      </p>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. In omnis fugiat doloribus libero placeat soluta, voluptas perferendis exercitationem laborum, amet eaque aspernatur quasi earum aliquam, delectus fuga enim optio. Distinctio corrupti minus quas, ex dolorum culpa debitis necessitatibus facilis quos cumque. Soluta expedita quo quia dolorem excepturi incidunt eos nam eaque alias, repellat aliquam dolor quidem ipsam accusantium nulla earum tenetur provident fugit, possimus facere aspernatur amet reprehenderit dolore rem!\n      </p>\n      <button className=\"btn\" onClick={() => history.push('/')}>Back to Todo List</button>\n    </>\n  )\n}\n","import React from 'react';\nimport { ITodo } from '../interfaces';\n\n\ntype TodoListProps = {\n  todos: ITodo[],\n  onToggle(id: number): void,\n  onRemove(id: number): void\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  onToggle,\n  onRemove\n}) => {\n  if (!todos.length) {\n    return <p className=\"center\">No Tasks Yet!</p>\n  }\n\n  const removeHandler = (event: React.MouseEvent, id: number): void => {\n    event.preventDefault();\n    onRemove(id);\n  }\n\n  return (\n    <ul>\n      {todos.map((todo) => {\n        const {title, id, completed} = todo;\n        return (\n          <li className={`todo ${completed ? 'completed' : ''}`} key={id}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={completed}\n                onChange={onToggle.bind(null, id)}\n              />\n              <span>{title}</span>\n              <i\n                className=\"material-icons red-text\"\n                onClick={(event) => removeHandler(event, id)}\n              >\n                delete\n              </i>\n            </label>\n          </li>\n        )\n      })}\n\n    </ul>\n  )\n}\n","import React, {useState} from 'react';\n\n\ninterface TodoFormProps {\n  onAdd(title: string) :void\n}\n\nexport const TodoForm: React.FC<TodoFormProps> = (props) => {\n  const [title, setTitle] = useState<string>('')\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value)\n  }\n\n  const keyPressHandler = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      props.onAdd(title)\n      setTitle('')\n    }\n  }\n\n  return (\n    <div className=\"input-field mt2\">\n      <input\n        onChange={changeHandler}\n        value={title}\n        type=\"text\"\n        id=\"title\"\n        placeholder=\"Add new task\"\n        onKeyPress={keyPressHandler}\n      />\n      <label htmlFor=\"title\" className=\"active\">Add new task</label>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport { TodoList } from '../components/TodoList';\nimport { TodoForm } from '../components/TodoForm';\nimport { ITodo } from '../interfaces';\n\n\ndeclare var confirm: (query: string) => boolean\n\nexport const TodosPage: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([])\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]')\n    setTodos(saved)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos])\n\n  const addHandler = (title: string) => {\n    const newTodo: ITodo = {\n      title,\n      id: Date.now(),\n      completed: false\n    }\n    // setTodos([newTodo, ...todos]);\n    setTodos((prev) => [newTodo, ...prev]);\n  }\n\n  const toggleHandler = (id: number) => {\n    setTodos((prev) => prev.map((todo) => {\n      if (todo.id === id) {\n        return {...todo, completed: !todo.completed};\n      }\n\n      return todo\n    }\n    ))\n  }\n  const removeHandler = (id: number) => {\n    const shouldRemove = confirm('Are you sure you want to remove?')\n\n    if (shouldRemove) {\n      setTodos((prev) => prev.filter((todo) => todo.id !== id))\n    }\n  }\n  return (\n    <>\n      <TodoForm  onAdd={addHandler} />\n      <TodoList\n        todos={todos}\n        onToggle={toggleHandler}\n        onRemove={removeHandler}\n      />\n    </>\n  )\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { Navbar } from './components/Navbar';\nimport { AboutPage } from './pages/AboutPage';\nimport { TodosPage } from './pages/TodosPage';\n\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" component={TodosPage} exact />\n          <Route path=\"/about\" component={AboutPage} exact />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}